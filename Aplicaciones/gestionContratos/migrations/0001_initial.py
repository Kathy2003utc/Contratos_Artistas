# Generated by Django 5.2 on 2025-07-01 05:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('fecha', models.DateField()),
                ('ubicacion', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Aceptado', 'Aceptado'), ('Rechazado', 'Rechazado')], default='Pendiente', max_length=20)),
                ('fecha_contrato', models.DateField(auto_now_add=True)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionContratos.evento')),
            ],
            options={
                'ordering': ['-fecha_contrato'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefono', models.CharField(max_length=10)),
                ('direccion', models.TextField()),
                ('rol', models.CharField(choices=[('Cliente', 'Cliente'), ('Artista', 'Artista'), ('Administrador', 'Administrador')], default='Cliente', max_length=20)),
                ('bloqueado', models.BooleanField(default=False)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='usuarios/perfil/')),
                ('portafolio_pdf', models.FileField(blank=True, null=True, upload_to='usuarios/portafolios/')),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('x_url', models.URLField(blank=True, null=True, verbose_name='X (Twitter)')),
                ('web_url', models.URLField(blank=True, null=True, verbose_name='Página web')),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupos a los que pertenece el usuario.', related_name='usuarios', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para el usuario.', related_name='usuarios_permisos', to='auth.permission', verbose_name='permisos de usuario')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reseña',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('puntuacion', models.IntegerField()),
                ('fecha', models.DateField(auto_now_add=True)),
                ('artista', models.ForeignKey(limit_choices_to={'rol': 'Artista'}, on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to='gestionContratos.usuario')),
                ('cliente', models.ForeignKey(limit_choices_to={'rol': 'Cliente'}, on_delete=django.db.models.deletion.CASCADE, to='gestionContratos.usuario')),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_pago', models.DateField(auto_now_add=True)),
                ('comprobante_imagen', models.ImageField(blank=True, null=True, upload_to='pagos/comprobantes/')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionContratos.contrato')),
                ('artista', models.ForeignKey(limit_choices_to={'rol': 'Artista'}, on_delete=django.db.models.deletion.CASCADE, related_name='pagos_artista', to='gestionContratos.usuario')),
                ('cliente', models.ForeignKey(limit_choices_to={'rol': 'Cliente'}, on_delete=django.db.models.deletion.CASCADE, related_name='pagos_cliente', to='gestionContratos.usuario')),
            ],
            options={
                'ordering': ['-fecha_pago'],
            },
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('emisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_enviados', to='gestionContratos.usuario')),
                ('receptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_recibidos', to='gestionContratos.usuario')),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='evento',
            name='cliente',
            field=models.ForeignKey(limit_choices_to={'rol': 'Cliente'}, on_delete=django.db.models.deletion.CASCADE, to='gestionContratos.usuario'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='artista',
            field=models.ForeignKey(limit_choices_to={'rol': 'Artista'}, on_delete=django.db.models.deletion.CASCADE, to='gestionContratos.usuario'),
        ),
    ]
